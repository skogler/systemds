#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

#
# THIS SCRIPT TRAINS A TEXT CLASSIFIER ON THE 20NEWSGROUPS DATASET.
#
# INPUT PARAMETERS:
# ---------------------------------------------------------------------------------------------
# NAME                TYPE    DEFAULT  MEANING
# ---------------------------------------------------------------------------------------------
# training_set_path   String  ---     Path to a CSV file to read the training data from.
#                                       Each line contains comma separated list of:
#                                         class, id, text,
#                                         each field is string.
# tokenize_spec_path  String  ---     Path to the tokenize spec JSON file.
# transform_spec_path String  ---     Path to the transform spec JSON file.
# output_model_path   String  ---     Path to the directory where the trained model and recode
#                                      metadata should be saved.
# ---------------------------------------------------------------------------------------------

out_meta_path = $output_model_path + '/meta.csv'

tokenize_spec = read($tokenize_spec_path, data_type="scalar", value_type="string");
transform_spec = read($transform_spec_path, data_type="scalar", value_type="string");
df_train = read($training_set_path);

df_tokenized = tokenize(target=df_train, spec=tokenize_spec);
print(toString(df_tokenized))

[df_recoded, meta] = transformencode(target=df_tokenized, spec=transform_spec);
write(meta, out_meta_path)

# print(toString(df_recoded));
# print(toString(meta));
train_matrix = table(df_recoded[,1], df_recoded[,2],df_recoded[,3])
# TODO: choose a model and train it


